
// const supabase = createClient(
//   "https://kjvzroyrhdugxnoprpdx.supabase.co/",
//   "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imtqdnpyb3lyaGR1Z3hub3BycGR4Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3MjU5MTkwOTMsImV4cCI6MjA0MTQ5NTA5M30.hrZf90MB81D8MkkmFqKQtCv07UptVd3tkGLgIDMJsQg"
// );

// const insertQuizData = async () => {
//   const { data, error } = await supabase.from("questions").insert([
//     {
//       question: "Which is the most popular JavaScript framework?",
//       options: JSON.stringify(["Angular", "React", "Svelte", "Vue"]),
//       correctOption: 1,
//       points: 10,
//     },
//     {
//       question: "Which company invented React?",
//       options: JSON.stringify(["Google", "Apple", "Netflix", "Facebook"]),
//       correctOption: 3,
//       points: 10,
//     },
//     {
//       question: "What's the fundamental building block of React apps?",
//       options: JSON.stringify(["Components", "Blocks", "Elements", "Effects"]),
//       correctOption: 0,
//       points: 10,
//     },
//     {
//       question:
//         "What's the name of the syntax we use to describe the UI in React components?",
//       options: JSON.stringify(["FBJ", "Babel", "JSX", "ES2015"]),
//       correctOption: 2,
//       points: 10,
//     },
//     {
//       question: "How does data flow naturally in React apps?",
//       options: JSON.stringify([
//         "From parents to children",
//         "From children to parents",
//         "Both ways",
//         "The developers decides",
//       ]),
//       correctOption: 0,
//       points: 10,
//     },
//     {
//       question: "How to pass data into a child component?",
//       options: JSON.stringify(["State", "Props", "PropTypes", "Parameters"]),
//       correctOption: 1,
//       points: 10,
//     },
//     {
//       question: "When to use derived state?",
//       options: JSON.stringify([
//         "Whenever the state should not trigger a re-render",
//         "Whenever the state can be synchronized with an effect",
//         "Whenever the state should be accessible to all components",
//         "Whenever the state can be computed from another state variable",
//       ]),
//       correctOption: 3,
//       points: 30,
//     },
//     {
//       question: "What triggers a UI re-render in React?",
//       options: JSON.stringify([
//         "Running an effect",
//         "Passing props",
//         "Updating state",
//         "Adding event listeners to DOM elements",
//       ]),
//       correctOption: 2,
//       points: 20,
//     },
//     {
//       question: 'When do we directly "touch" the DOM in React?',
//       options: JSON.stringify([
//         "When we need to listen to an event",
//         "When we need to change the UI",
//         "When we need to add styles",
//         "Almost never",
//       ]),
//       correctOption: 3,
//       points: 20,
//     },
//     {
//       question: "In what situation do we use a callback to update state?",
//       options: JSON.stringify([
//         "When updating the state will be slow",
//         "When the updated state is very data-intensive",
//         "When the state update should happen faster",
//         "When the new state depends on the previous state",
//       ]),
//       correctOption: 3,
//       points: 30,
//     },
//     {
//       question:
//         "If we pass a function to useState, when will that function be called?",
//       options: JSON.stringify([
//         "On each re-render",
//         "Each time we update the state",
//         "Only on the initial render",
//         "The first time we update the state",
//       ]),
//       correctOption: 2,
//       points: 30,
//     },
//     {
//       question:
//         "Which hook to use for an API request on the component's initial render?",
//       options: JSON.stringify([
//         "useState",
//         "useEffect",
//         "useRef",
//         "useReducer",
//       ]),
//       correctOption: 1,
//       points: 10,
//     },
//     {
//       question:
//         "Which variables should go into the useEffect dependency array?",
//       options: JSON.stringify([
//         "Usually none",
//         "All our state variables",
//         "All state and props referenced in the effect",
//         "All variables needed for clean up",
//       ]),
//       correctOption: 2,
//       points: 30,
//     },
//     {
//       question: "An effect will always run on the initial render.",
//       options: JSON.stringify([
//         "True",
//         "It depends on the dependency array",
//         "False",
//         "In depends on the code in the effect",
//       ]),
//       correctOption: 0,
//       points: 30,
//     },
//     {
//       question:
//         "When will an effect run if it doesn't have a dependency array?",
//       options: JSON.stringify([
//         "Only when the component mounts",
//         "Only when the component unmounts",
//         "The first time the component re-renders",
//         "Each time the component is re-rendered",
//       ]),
//       correctOption: 3,
//       points: 20,
//     },
//   ]);

//   if (error) {
//     console.error("Error inserting data:", error);
//   } else {
//     console.log("Data inserted:", data);
//   }
// };

// insertQuizData();